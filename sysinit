#!/bin/sh
#
# /etc/sysinit: system boot script
#

red='\e[0;31m'      #Red
green='\e[0;32m'    #Green
yellow='\e[0;33m'   #Yellow
blue='\e[0;34m'     #Blue
purple='\e[0;35m'   #Purple
cyan='\e[0;36m'     #Cyan
gray='\e[0;37m'     #Gray
reset='\e[0m' 	  #Reset color

# Load configuration
. /etc/sysinit.conf

# list daemon
DAEMONS=(dbus alsa lxdm networkmanager bluetooth net wpa acpid cups gpm httpd ntpd rsyncd smartd)

msg() {
	echo -e "${green}///${reset} $@"
}

startup() {
	
	# Make sure /run is available before logging any messages
	/bin/mount /run

	/bin/mkdir -p /run/lock /run/shm
	/bin/chmod 1777 /run/shm /run/lock

	msg "Mounting virtual file systems..."
	/bin/mountpoint -q /proc || /bin/mount -o nosuid,noexec,nodev /proc
	/bin/mountpoint -q /sys || /bin/mount -o nosuid,noexec,nodev /sys
	/bin/mountpoint -q /dev || /bin/mount -o mode=0755,nosuid /dev

	ln -sfn /run/shm /dev/shm

	# Makes changes to the proc filesystem
	if [ -f "/etc/sysctl.conf" ]; then
		msg "Setting kernel runtime parameters..."
		/sbin/sysctl -q -p
	fi

	# Loads required modules
	if [ "${#MODULES[@]}" -gt 0 ]; then
		msg "Loading modules..."
		for modules in ${MODULES[@]}; do
			/sbin/modprobe $modules
		done
	fi

	# Populates /dev with device nodes
	msg "Populating /dev with device nodes..."
	/sbin/udevd --daemon

	# Now traverse /sys in order to "coldplug" devices that have
	# already been discovered
	/sbin/udevadm trigger --action=add    --type=subsystems
	/sbin/udevadm trigger --action=add    --type=devices
	/sbin/udevadm trigger --action=change --type=devices
	/sbin/udevadm settle

	# If any LVM based partitions are on the system, ensure they
	# are activated so they can be used.
	if [ -x /sbin/vgchange ]; then 
		/sbin/vgchange -a y >/dev/null
	fi 

	# Enable swap
	msg "Activating all swap files/partitions..."
	/sbin/swapon -a

	msg "Setting hardware clock..."
	case "$CLOCK" in
		UTC|utc)
			/sbin/hwclock --hctosys --utc
		;;
		LOCAL|local|LOCALTIME|localtime)
			/sbin/hwclock --hctosys --localtime
		;;
	esac

	msg "Mounting root file system in read-only mode..."
	/bin/mount -n -o remount,ro /

	msg "Checking filesystems..."
	/sbin/fsck -A -a -C -T
	if [ $? -gt 0 ]; then
	   echo
	   echo "ERROR:"
	   echo "Your filesystem has been severely damaged. You can probably correct this"
	   echo "problem by running e2fsck manually (eg. with the -v and -y options). After"
	   echo "you logout, the system will reboot."
	   echo
	   PS1="(Repair filesystem)# "
	   export PS1
	   /sbin/sulogin
	   /bin/umount -a -r
	   /sbin/reboot -f
	fi

	msg "Remounting root file system in read-write mode..."
	/bin/mount --options remount,rw / >/dev/null

	# Remove fsck-related file system watermarks.
	/bin/rm -f /fastboot /forcefsck

	# Make sure /dev/pts exists
	/bin/mkdir -p /dev/pts

	msg "Mounting remaining file systems..."
	/bin/mount --all --test-opts no_netdev >/dev/null

	# Clean filesystem
	msg "Cleaning file systems..."
	(cd /var/run && /bin/find . -name "*.pid" -delete)
	(cd /var/lock && /bin/find . ! -type d -delete)
	(cd /tmp && /bin/find . -xdev -mindepth 1 ! -name lost+found -delete)
	/bin/mkdir -m 1777 /tmp/.ICE-unix

	/usr/bin/touch /var/run/utmp
	if grep -q '^utmp:' /etc/group; then
	  /bin/chmod 664 /var/run/utmp
	  /bin/chgrp utmp /var/run/utmp
	fi

	# Setting up Linux console
	if [ "$FONT" ] && [ "$FONT" != "default" ]; then
		msg "Setting font to ${BLUE}$FONT${NORM}"
		/bin/setfont "/usr/share/kbd/consolefonts/$FONT.psf.gz"
	fi
	if [ "$KEYMAP" ]; then
		msg "Setting keyboard to ${KEYMAP}"
		/bin/loadkeys -q $KEYMAP
	fi

	msg "Bringing up the loopback interface..."
	ip addr add 127.0.0.1/8 label lo dev lo
	ip link set lo up

	HOSTNAME=`cat /etc/hostname`
	msg "Setting hostname to ${HOSTNAME}"
	/bin/hostname ${HOSTNAME}

	msg "Starting system log daemons..."
	/sbin/syslogd

	msg "Starting kernel log daemon..."
	/sbin/klogd -c3

	if [ -f "/etc/random-seed" ]; then
	  msg "Initializing random number generator..."
	  /bin/cat /etc/random-seed >/dev/urandom
	  /bin/rm -f /etc/random-seed
	fi

	msg "Updating module dependencies..."
	/sbin/depmod -a

}

multi() {
	
	# Start daemons
	if [ "${#DAEMONS[@]}" -gt 0 ]; then
		for daemon in ${DAEMONS[@]}; do
			if [ -f /etc/rc.d/$daemon -a -x /etc/rc.d/$daemon ]; then
				/etc/rc.d/$daemon start
			fi
		done
	fi

}

single() {
	
	if [ "$PREVLEVEL" = "5" ]; then
		# Stopping daemons reversely
		if [ "${DAEMONS[*]}" ]; then
			for daemon in "${DAEMONS[@]}"; do
				R_DAEMONS=($daemon ${R_DAEMONS[@]})
			done
			for daemon in "${R_DAEMONS[@]}"; do
				if [ -f /etc/rc.d/$daemon -a -x /etc/rc.d/$daemon ]; then
					/etc/rc.d/$daemon stop
				fi
			done
		fi
	fi

	echo "Sending all processes the TERM signal..."
	/sbin/killall5 -15
	sleep 1

	echo "Sending all processes the KILL signal..."
	/sbin/killall5 -9

}

halt() {
	
	if [ "$PREVLEVEL" = "5" ]; then
		# Stopping daemons reversely
		if [ "${DAEMONS[*]}" ]; then
			for daemon in "${DAEMONS[@]}"; do
				R_DAEMONS=($daemon ${R_DAEMONS[@]})
			done
			for daemon in "${R_DAEMONS[@]}"; do
				if [ -f /etc/rc.d/$daemon -a -x /etc/rc.d/$daemon ]; then
					/etc/rc.d/$daemon stop
				fi
			done
		fi
	fi

	msg "Sending all processes the TERM signal..."
	/sbin/killall5 -15
	sleep 1

	msg "Sending all processes the KILL signal..."
	/sbin/killall5 -9
	sleep 1

	msg "Deactivating swap partitions..."
	/sbin/swapoff -a

	msg "Saving random seed to a temporary file..."
	/bin/dd if=/dev/urandom of=/etc/random-seed count=1 bs=512 2>/dev/null

	msg "Saving the system time to hardware clock..."
	case "$CLOCK" in
		utc|UTC)
			/sbin/hwclock --systohc --utc
		;;
		LOCAL|local|LOCALTIME|localtime)
			/sbin/hwclock --systohc --localtime
		;;
	esac

	# Write to wtmp file before unmounting
	/sbin/halt -w

	msg "Unmounting remote filesystems..."
	umount -a -d -r -t notmpfs,nosysfs,nodevtmpfs,noproc,nodevpts

	msg "Remounting root filesystem read-only..."
	/bin/mount -n -o remount,ro /

	msg "Flushing filesystem buffers..."
	/bin/sync

	# Power off or reboot
	if [ "$RUNLEVEL" = "0" ]; then
		/sbin/poweroff -d -f -i
	else
		/sbin/reboot -d -f -i
	fi

}

case $1 in
	start)  startup ;;
	multi)  multi   ;;
	single) single  ;;
	halt)   halt    ;;
esac

# End of file
